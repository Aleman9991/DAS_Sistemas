Factores que debes considerar para crear tu aplicacion en la nube

Click IT
Linux -> La nube -> GitHub -> Docker -> Autoscaling -> Serverless -> Seguridad y monitoreo -> Herramienta de control y manejo de datos

precio de tener una aplicacion en la nube
200 - 300 dolares por mes
700 - 1000 por mes si es escalable

Linux:
	Por que?
		Linux es utilizado por el 99% de las super computadoras
		Linux tiene una comunidad muy grande
		90% de las startups son desarrolladas en la nube y con linux
		Aprender linux potencia su carrera
	
		La mayoria de aplicaciones existentes estan creadas con linux


Que es la nube?
	Un monton de servidores que alojan aplicaciones o cosas asi, que estan en un Data Center a los que se pueden conectarse remotamente a traves de internet

	Que tipos de servicio puedo utilizar en la nube?
		Como es que la nube me ayuda a desarrollar y potenciar mi aplicacion?
			Puede facilitar la instalacion de servidores, aumentar recursos, etc.
			
		Cuales son los servidores basicos que deberia conocer en la nube?
			Principales provedores:
				Amazon (numero uno)
				Google cloud
				
			Servidores de bases de datos
			Espacio de almacenamiento
			Servicio de escalamiento
			Etc.

		Aprender a configurar servidores de aplicacion, 
		Aprender a configurar servidores de base de datos,
		Saber sobre almacenamiento en la nube




GitHub

	Mantener versionado tu codigo
	Hace la colaboracion mas rapida y efectiva
	Hace posible las recuperaciones rapidas
	Crea buenos habitos de desarrollo y una metodologia de trabajo

	Se puede revisar remotamente el trabajo con otros colaboladores

Docker
	Docker es un servicio que nos permite dar escalabilidad a las aplicaciones
	Docker
	Se tiene una aplicacion corriendo en un servidor
	Docker hacer una copia de una configuracion 
	
	Como funciona la orquestacion y para que sirve?
		Es el hecho de tener herramientas que nos puedan lanzar mas copias de esta
		Kubernetes (Analogia: Pulpo que cuando el servidor necesita mas servidores acomoda mas para que sea suficiente)
		
		Servicios de Orquestacion: 
			Kubernetes -> Multiples nubes
			Elastic Containers Server (ECS) -> Amazon
		
		
		Por que es importante  que mi aplicacion sea escalable y que tenga alta disponibilidad?
		
		Cuales son los servicios de orquestacion que deberia conocer?


Escalabilidad y alta disponibilidad

	Tienes que hacer disponible tu aplicacion para millones de usuarios
	
	Habilidad de Auto-Recuperacion
			Se hace un chequeo continuo de servidores para cuando unos se caigan, puedan habilitar otros para siempre tener la cantidad de servidores deseados listos
	
	Utilizar servicios Serverless aumenta la disponibilidad


	(Analogia El cine cuando lanzo avengers y se murio la pagina, pues puede ser que no tuviera escalbilidad, o que tuvieran pero no lo suficiente)
				La escalabilidad hace posible prevenir todos estos problemas

	
ServerLess
	Sin servidores
	
	Que es y que ventajas tiene?
	
		Remover el BackEnd y en vez de correrlo en un servidor correrlo en otra parte, en la nube o algo asi
		Sacar una operacion que cause mucha carga y que se haga aparte para no saturar
		Facilita la administracion del codigo
		

		En que consiste el concepto?
	
		Que es Lambda?¿Que es API Gateway?
			Lambda es el encargado de conectar la aplicacion con el repo de las operaciones albergadas en una API Gateway
			

		En que tareas especificas de mi aplicacion me podria ayudar estas tecnologias serverless?
			Generacion de Reportes
			Tareas pesadas que requieren un tiempo de ejecucion unico y no comprometan los recursos

		Que lenguajes debo aprender para trabajar serverless?
			JavaScrip(NodeJS) - Python - Ruby


Seguridad y Monitoreo de apps

	Firewalls o web application Firewalls
		Permitir quien accesa a nuestra aplicacion o que queremos proteger
	
	Ethical Hacking
		Probar las vulnerabilidades en contra de las aplicaciones de hacking mas conocidas
	
	Monitoreo con herramientas de la nube
		Ofrece un sistema de monitoreo, monitorea toda la infraestructura, servidores de docker, solicitudes, etc.
		NewRelic para mejorar la experiencia del usuario (cuanto tarda en cargar, cuantas peticiones hace, cuantas se desarrollan y cuantas quedan en cola)
	
	Monitoreo con herramientas 3rd party
		

Manejo de Datos

	Que se debe tomar en cuenta?
		Algo simple - Si es algo pequeño puede usarse algo simple como MySQL, etc 
		(cientos de miles de usuarios concurrentes, y procesos que corren)
		Algo mas pesado - Si se quiere mucha info y procesos se puede usar MongoDB o elasticsearch

		Seguridad es crucial
			proteger la informacion sensitiva
			Toda la informacion que pase por la aplicacion debe estar segura
			SQL injection
			Se debe tener en cuenta: que tamaño de base de datos se ocupa y la seguridad


Imagen para entender (imagen photoshopeada asi lo mas bravero posible):
	Pulpo manejando los servicios de docker, basados en GitHub almacenado en la nube



Esquema de como funcionaria una app en la nube mas o menos:
	Todo esta basado en linux
	Se estan utilizando todos los servicios de la nube y pocos mas
	Existe el metodo de acceder desde compu o cel
	Se monitorea todo con:
		CloudWatch
		IAM
		CloudTrail

	Se utiliza gitHub New Ralic y Sentry externamente


------------------------------------------------------------------------------------------------------------------

checar que es:
VPS - AWS

VPS:
	Servidor Virtual Privado (Virtual Private Server):
		Es una partición virtual dentro de un servidor físico
		Un VPS asigna recursos exclusivos a cada partición.
		El servidor virtual otorga acceso raíz, permite instalar un sistema operativo preferido y trabajar en un proyecto con un alto grado de libertad.

AWS
	Amazon Web Server:
		Amazon Web Services engloba una gran cantidad de servicios para poder realizar distintos tipos
		de actividades en la nube. Desde almacenamiento a la gestión de instancias, imágenes virtuales,
		desarrollo de aplicaciones móviles, etc.

		Herramientas disponibles:
			Cloud computing: todo lo necesario para la creación de instancias y el mantenimiento o el escalado de las mismas.
			
			Bases de datos: distintos tipos de bases de datos pueden permanecer en la nube mediante el servicio Amazon RDS,
				que incluye distintos tipos a elegir como:
					MySQL
					PosgreSQL
					Oracle
					SQL Server, Amazon Aurora, o Amazon DynamoDB para NoSQL.
			
			Creación de redes virtuales: principalmente gracias a Amazon VPC.

			Aplicaciones empresariales: Amazon WorkMail es el servicio de correo empresarial que
					ofrece Amazon, al que pueden unirse otros servicios como
					Amazon WorkDocs y Amazon WorkSpaces.

			Almacenamiento y gestores de contenido

			Inteligencia de negocios o Business Intelligence (BI): 
				Sistemas para análisis de datos empresariales a gran escala y otros servicios
				para la gestión de flujos de datos

			Gestión de aplicaciones móviles

			Internet de las cosas (Internet of Things)

			Herramientas para desarrolladores: para almacenar código, implementarlo automáticamente
				o incluso publicar software mediante un sistema de entrega continua.

			Seguridad y control de acceso: se pueden establecer autenticaciones en varios pasos para
				poder proteger el acceso a sus sistemas internos, ya estén en la nube o
				instalados de forma local en sus instalaciones.

